Data were preprocessed with the three software packages: Elekta NeuromagÂ® MaxFilter (version 2.2), Matlab (version 2014a) and MNE-Python (version 0.8.6).

3.3.1 Behavioral data

Two types of behavioral data were analyzed for group and condition effects: response time (RT) and response accuracy (RA).
Response time was measured at the condition onset, i.e. at the "d" sound of "den" or "der" (in the subject-relative clause or the object-relative clause, respectively).
Trials were omitted when the subject skipped or answered them incorrectly.
Trials were also omitted if the response took longer than 4000ms.
This procedure removed 11.1% of the childrens' trials, and 2.5% of the adults' trials.
RT and RA were determined for each subject separately from the remaining trials.
Both metrics were tested for the requirements for an analysis of variance (ANOVA).
Normality of the residuals was tested with a Shapiro-Wilk test [swtest], implemented in Matlab.
Equality of variances was tested with a Levene [levtest] test, implemented in SPSS.
RA data failed the normality test.
To include RA data in the following analysis, they were transformed to fit a normal distribution.
This transformation was accomplished with the inverted sigmoid function:
accuracy_transformed = -log(1./accuracy-1)
All results from the ANOVA will be transformed back into milisecond space with the sigmoid function:
result = 1/(1+exp(-result_transformed))


3.3.2 Sensor-space activity

[Preprocessing and HPI correction]
Signal-space separation (in MaxFilter) was used to reduce noise in the data by suppressing magnetic interference coming from outside and inside the sensory array.
MEG recordings were corrected for HPI movements, and co-registered across blocks to the inital head position for each individual (processing in MaxFilter).
Data were then subjected to a 0.4Hz FIR highpass filter (Hamming window design, 4367 coefficients, -130db damping at 0Hz, processing in Matlab) to remove slow trends.

[Artifact removal]
MEG channels with abnormally high noise levels as identified by visual inspection were rejected from further analysis. A median of 1 channel (maximum: 3 channels) was removed.
The resulting pre-processed data contained major artifacts from spontaneous channel jumps, electrocardiographic (ECG) activity and electrooculographic (EOG) activity.
Jump amplitudes were detected by selecting peaks in the z-transformed continuous data that exceeded a threshold of 12 standard deviations.
Segments of 2 seconds in the pre-processed continuous data were rejected if any magnitude channel exceeded an amplitude of 6 * 10e-12 T (gradiometer channels: 400 * 10e-12 T/m).
Continuous data were then decomposed into independent components (ICA) that explained 99% of the variance.
Components that correlated with EOG or ECG channels were removed with the MNE methods preprocessing.ica_find_ecg_events() and preprocessing.ica_find_eog_events(), respectively.
ICA-based correction removed an average of 2.1 components per subject and block (minimum: 1, maximum: 4).
The resulting ICA components were used to reconstruct continuous data.

[Epoching]
The main trigger was set at the condition onset (described in [3.3.1]).
Epochs were created between 1000ms before and 4000ms after the main trigger.
An epoch was rejected if the trial was skipped, or answered too slow (more than 4000ms) or answered incorrectly.
This procedure yielded an average of [] trials in children and [] trials in adults.
Data were filtered before epoching with a 45Hz FIR lowpass for visualization purposes only.

[Establishing time windows of interest]

The condition effect was used to determine suitable time windows.
This bootstrapping strategy typically causes overfitting.
This problem was resolved with a cluster-level permutation comparison.
Since the group had a strong impact on RT (see [4.1.1]), effective time windows were estimated separately for children and adults.
First, extracted trials were split into a 4 parts (2 groups x 2 conditions).
First, all trials from the selected part were pooled.
Third, sensor data was pooled by calculating the mean from one of four different sensor groups.
General locations were selected according to previous literature findings.
The equivalent sensor selections were determined by the MNE function read_selection, and are visualized in [Fig. 3.3.2.sensors].
Fourth, clusters were computed by the MNE function stats.permutation_cluster_test [8].
The function was run with 2500 permutations, and an t-threshold of 1.0.

For visualization purposes, grand average activity was also calculated for each sensor group and condition, separately for children and adults.

* [Fig. 3.3.sensors]: General locations for the sensor-level analysis *
 * "Description", "Visualization" *
 * "Left/Right - frontal, temporal, parietal", [6 plots] *

3.3.3 Source space activity

[Anatomical preprocessing]
Cortical reconstruction and volumetric segmentation was performed with the Freesurfer image analysis suite, which is documented and freely available for download online (http://surfer.nmr.mgh.harvard.edu/).
The technical details of these procedures are described in prior publications (Dale et al., 1999; Dale and Sereno, 1993; Fischl and Dale, 2000; Fischl et al., 2001; Fischl et al., 2002; Fischl et al., 2004a; Fischl et al., 1999a; Fischl et al., 1999b; Fischl et al., 2004b; Han et al., 2006; Jovicich et al., 2006; Segonne et al., 2004, Reuter et al. 2010, Reuter et al. 2012).
We followed the recommended processing pipeline ("recon-all"), with three optional functions.
First, the option "-nuintensitycor-3T" improved brain segmentation accuracy by optimizing the bias field correction [3.3.nuintensity].
Second, by invoking "-notal-check", we skipped the Talairach registration checks.
Talairach registration was prone to failure especially in the infant subjects, and uneccessary for our further processing steps.
Third, we supplied and included T2-weighted MRI datasets with the options "-T2" and "-T2pial".
The combination of T1- and T2-weighted images improves tissue differentiation especially around the pia mater, yielding a more accurate cortex segmentation.
This pipeline yielded a continuous, antomically plausible cortical surface in MRI space.

[Forward and inverse operator]
For the forward operator, three components were necessary: a source model, a BEM model and a coregistration file.
The cortical surface from Freesurfer was used to construct the source model.
Sources were generated by the MNE function mne_setup_bem.
The result were 20484 sources (10242 per hemisphere), distributed with approximately equal density over the cortical surface.
The head surface from Freesurfer was used to extract a scalp surface layer.
The BEM was constructed from this scalp layer with the function mne_surf2bem, using the default options.
This function sampled down the original surface to the 4th subdivision of an icosahedron.
The finished BEM consisted of 5140 nodes.
Finally, a coregistration file provided the transformation between MRI space and MEG space.
This coregistration attempted to minimize the distance between digitized head surface points and the head surface extracted from the MRI. 
It was performed for each subject individually using the software mne_analyze.
The initial fit was done manually, with visual error feedback.
The following fine adjustment was performed automatically.
This process was repeated until the average spatial error was less than 2mm.
These three components were assembled into a forward operator by the method mne_do_forward_solution.

For the inverse operator, three components were necessary again: the forward model, a noise covariance matrix, and a regularization factor.
The forward model was supplied from the previous step.
For the noise covariance matrix, the 1000ms after visual onset were extracted from each trial.
Then, the covariance matrix was computed from this data with the function mne.compute_covariance().
The regularization factor was determined from this noise covariance matrix.
First, only coefficients from gradiometer channels were selected.
Second, these coefficients were transformed with a singular value decomposition.
Third, the upper cutoff was defined as the first value of the transformed coefficients.
Fourth, the index at which the transformed coefficients performed the steepest drop in logarithmic value was determined.
Fifth, this index was defined as the maximum amount of usable dimensions.
Sixth, the lower cutoff was defined as the value at this index, plus 15%.
Seventh, the regularization factor was computed by dividing the lower cutoff by the higher cutoff.

Each component was calculated individually for each subject.
The three components were combined into the inverse operator by the method mne_do_inverse_operator.
The regularization factor was supplied with the option "--megreg".

[Inverse solution]
For determining regional cortical activity, 8 regions needed to be defined: the primary auditory cortex (PAC), the anterior and posterior parts of the superior temporal sulcus (a/pSTS), the anterior and posterior parts of the superior temporal gyrus (a/pSTG), Brodmann area 45 (BA45), Brodmann area 44 (BA44) and the ventral Brodmann area 6 (BA6v).
The regions were spatially defined manually on the reference subject.
Freesurfer provided the aparc.a2009s segmentation, which became the basis for this regional selection.
Because of the insensitivity of MEG to perpendicular sources, a separation line between neighboring gyri and sulci needs to be completely unbiased, or it could lead to strong accidental misattribution.
Because node resolution on lateral gyrus walls was not sufficient to ensure a bias-free separtion line, we combined the regions aSTS and aSTG into aSTS/G.
Similarly, pSTS and pSTG were combined into pSTS/G.
The final regions of interest on the reference brain are visualized in [Fig. 3.3.3.ROI].
Regions were automatically valid for all other subjects as well, since the inverse operator was already calculated in respect to the morphed reference brain.

[Fig. 3.3.ROI: Left: selected regions on the natural cortex. Right: selected regions on the inflated cortex.]

The inverse operator was used to calculate inverse solutions from MEG sensor data.
Inverse solutions were calculated for each time point, region, trial and subject individually.
The process was performed by the function mne.minimum_norm.apply_inverse_epochs(), with sLORETA as the inverse method.
The option "pick_ori=normal" ensured that currents leaving and entering the cortex were designated positive and negative, respectively.
Due to the combination of passive and active noise reduction and artifact suppression, we assumed a fairly high signal-to-noise-ratio (SNR) of 100:1 for each individual source.
The regularization factor was estimated by 1/SNR = 1e-4.
The result was a series of activation patterns within each region.
Finally, the mean of regional node activity was calculated for each time point, region, trial and subject.


The resulting localized activity was again subjected to a cluster analysis.
Extracted trials were split into a 4 parts (2 groups x 2 conditions).
The two groups were again evaluated separately.
Trials contained average data from six regions (PAC, aSTS/G, pSTS/G, BA44, BA45 and BA6v).
Clusters were again determined with the MNE function stats.permutation_cluster_test [8].
The function too was run with 2500 permutations, and an t-threshold of 1.0.

For visualization purposes, grand average activity was also calculated for each cortical region, group and condition.


3.3.4 Interaction analysis

The TRENtool software was used for exploring transfered entropy between cortical areas.
- Role of embedding, Ragwitz optimization
- statistical tests between conditions and multiple comparisons